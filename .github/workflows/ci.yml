name: Execute CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check-code:
      runs-on: ubuntu-18.04
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-go@v2
          with:
            go-version: '1.19'
        - name: Lint
          run: |
            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.49.0

            golangci-lint run
        - name: Fmt
          run: |
            go fmt ./...
            echo "==> Checking that code complies with go fmt requirements..."
            git diff --exit-code; if [ $? -eq 1 ]; then \
            echo "Found files that are not fmt'ed."; \
            echo "You can use the command: \`go fmt ./...\` to reformat code."; \
            exit 1; \
            fi
        - name: Generation
          run: |
            make generate
            echo "==> Checking that auto-generated code is not changed..."
            git diff --exit-code; if [ $? -eq 1 ]; then \
                echo "Found diffs in go generated code."; \
                echo "You can use the command: \`make generate\` to reformat code."; \
                exit 1; \
            fi
  test:
      strategy:
        matrix:
          go-version: [1.19]
          platform: [ubuntu-latest, macos-latest, windows-latest]
      runs-on: ${{ matrix.platform }}
      steps:
        - name: Install Go
          uses: actions/setup-go@v2
          with:
            go-version: ${{ matrix.go-version }}
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Test
          run: go test -count 1 ./... -coverprofile=coverage.txt -covermode=atomic -timeout=3m
  build:
    strategy:
      matrix:
        goos: ["linux", "darwin", "windows"]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.19
    - name: Build
      run: GOOS=${{matrix.goos}} go build -v -o packer-plugin-outscale_${{matrix.goos}}
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.3.1
      with: 
        name: packer-plugin-outscale_${{matrix.goos}}
        path: ./packer-plugin-outscale_${{matrix.goos}}
  dependabot-auto-merge:
    needs: [test, check-code]
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.1.1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Auto-merge
        run: gh pr merge --auto --rebase "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
